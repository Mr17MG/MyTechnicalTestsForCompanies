import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump models 1.0 ./qml'

Module {
    dependencies: ["QtQuick 2.15", "QtQuick.LocalStorage 2.15"]
    Component {
        prototype: "QObject"
        name: "ConsumedModel 1.0"
        exports: ["ConsumedModel 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        isCreatable: false
        isSingleton: true
        Property { name: "db"; type: "QVariant" }
        Method { name: "createTable"; type: "QVariant" }
        Method {
            name: "insertConsume"
            type: "QVariant"
            Parameter { name: "dataList"; type: "QVariant" }
        }
        Method { name: "updateConsume"; type: "QVariant" }
        Method { name: "deleteConsume"; type: "QVariant" }
        Method { name: "getConsumed"; type: "QVariant" }
        Method { name: "getCurrentDayCalories"; type: "QVariant" }
        Method {
            name: "getConsumeByColumnValue"
            type: "QVariant"
            Parameter { name: "column"; type: "QVariant" }
            Parameter { name: "value"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QObject"
        name: "HistoriesModel 1.0"
        exports: ["HistoriesModel 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        isCreatable: false
        isSingleton: true
        Property { name: "db"; type: "QVariant" }
        Method { name: "createTable"; type: "QVariant" }
        Method {
            name: "insertHistory"
            type: "QVariant"
            Parameter { name: "dataList"; type: "QVariant" }
        }
        Method { name: "updateHistory"; type: "QVariant" }
        Method { name: "deleteHistory"; type: "QVariant" }
        Method { name: "getHistories"; type: "QVariant" }
        Method {
            name: "getHistoryByKey"
            type: "QVariant"
            Parameter { name: "key"; type: "QVariant" }
        }
        Method {
            name: "getHistoryByColumn"
            type: "QVariant"
            Parameter { name: "column"; type: "QVariant" }
            Parameter { name: "value"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QObject"
        name: "NutrientsModel 1.0"
        exports: ["NutrientsModel 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        isCreatable: false
        isSingleton: true
        Property { name: "db"; type: "QVariant" }
        Method { name: "createTable"; type: "QVariant" }
        Method {
            name: "insertNutrient"
            type: "QVariant"
            Parameter { name: "values"; type: "QVariant" }
        }
        Method {
            name: "insertNutrientOfRecipe"
            type: "QVariant"
            Parameter { name: "dataList"; type: "QVariant" }
        }
        Method { name: "updateNutrient"; type: "QVariant" }
        Method { name: "deleteNutrient"; type: "QVariant" }
        Method { name: "getNutrients"; type: "QVariant" }
        Method {
            name: "getNutrientsByRecipe"
            type: "QVariant"
            Parameter { name: "recipeId"; type: "QVariant" }
        }
        Method {
            name: "getNutrientByColumn"
            type: "QVariant"
            Parameter { name: "column"; type: "QVariant" }
            Parameter { name: "value"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QObject"
        name: "RecipeModel 1.0"
        exports: ["RecipeModel 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        isCreatable: false
        isSingleton: true
        Property { name: "db"; type: "QVariant" }
        Method { name: "createTable"; type: "QVariant" }
        Method {
            name: "insertRecipe"
            type: "QVariant"
            Parameter { name: "dataList"; type: "QVariant" }
        }
        Method { name: "updateRecipe"; type: "QVariant" }
        Method { name: "deleteRecipe"; type: "QVariant" }
        Method { name: "getRecipes"; type: "QVariant" }
        Method {
            name: "getRecipeById"
            type: "QVariant"
            Parameter { name: "id"; type: "QVariant" }
        }
        Method {
            name: "getRecipeByColumnValue"
            type: "QVariant"
            Parameter { name: "column"; type: "QVariant" }
            Parameter { name: "value"; type: "QVariant" }
        }
    }
}
